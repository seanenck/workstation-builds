#!/bin/bash
LS_MODE="ls"
UNPACK_MODE="unpack"
INFO_MODE="info"
IS_MODE="--mode"

_usage() {
  {
    echo
    echo "oar:"
    echo "  <oci archive> (archive file)"
    echo "  <destination> (destination directory)"
    echo "  $IS_MODE        (operation mode: $LS_MODE, $UNPACK_MODE, $INFO_MODE, $UNPACK_MODE is default)"
  } >& 2
  exit 1
}

if [ -z "$1" ] || [ -z "$2" ]; then
  echo "archive and destination required" >& 2
  _usage
fi

MODE="$4"
if [ -n "$3" ]; then
  if [ "$3" != "$IS_MODE" ]; then
    echo "unknown argument: $3" >& 2
    _usage
  fi
  if [ -z "$4" ]; then
    echo "mode required" >& 2
    _usage
  fi
fi
if [ -z "$MODE" ]; then
  MODE="$UNPACK_MODE"
fi
FILE_UNTAR="xf"
IS_INFO=0
case "$MODE" in
  "$LS_MODE")
    FILE_UNTAR="tf"
    ;;
  "$UNPACK_MODE")
    ;;
  "$INFO_MODE")
    IS_INFO=1
    ;;
  *)
    echo "unknown mode: $MODE"
    _usage
esac

if [ -d "$2" ]; then
  echo "$2 exists" >& 2
  exit 1
fi

TAR_TO="$2/tar"
FS_TO="$2/fs"
mkdir -p "$TAR_TO" "$FS_TO"

if ! tar xf "$1" -C "$TAR_TO"; then
  echo "unable to unpack" >& 2
  exit 1
fi

_catfile() {
  if [ ! -e "$1" ]; then
    echo "$1 does not exist" >& 2
    exit 1
  fi
  echo "$1"
  jq < "$1"
  echo
}

if [ "$IS_INFO" -eq 1 ]; then
  for FILE in index.json oci-layout; do
    _catfile "$TAR_TO/$FILE"
  done
fi

for FILE in "$TAR_TO/blobs/"**/*; do
  TYPE=$(file "$FILE")
  if echo "$TYPE" | grep -q ": POSIX tar archive"; then
    if [ "$IS_INFO" -eq 0 ]; then
      if ! tar "$FILE_UNTAR" "$FILE" -C "$FS_TO"; then
        echo "unable to untar: $FILE" >& 2
        exit 1
      fi
    fi
    continue
  fi
  if echo "$TYPE" | grep -q ": JSON text data"; then
    if [ "$IS_INFO" -eq 1 ]; then
      _catfile "$FILE"
    fi
    continue
  fi
  echo "unknown filetype: $TYPE" >& 2
  exit 1
done
